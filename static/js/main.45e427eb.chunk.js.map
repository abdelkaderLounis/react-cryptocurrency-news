{"version":3,"sources":["routes/Main.js","routes/Currency.js","App.js","index.js"],"names":["Main","useState","cryptoList","setCryptoList","useEffect","axios","get","then","response","data","console","log","history","useHistory","className","class","style","paddingLeft","map","coin","width","marginLeft","marginRight","onClick","push","id","symbol","price_usd","Currency","useParams","name","nameid","rank","percent_change_24h","percent_change_1h","percent_change_7d","price_btc","market_cap_usd","volume24","volume24a","csupply","tsupply","msupply","setCoin","cursor","paddingBottom","price_btn","App","path","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45e427eb.chunk.js","sourcesContent":["import React , {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n//import ReactPaginate from 'react-paginate';\r\nexport  function Main() {\r\n       const [cryptoList,setCryptoList] = useState([])\r\n        useEffect(()=>{\r\n        axios.get('https://api.coinlore.net/api/tickers/?start=200&limit=100')\r\n        .then((response)=>{\r\n            setCryptoList(response.data['data'])\r\n            console.log(response.data['data'])\r\n        })\r\n        },[]);\r\n\r\n        // handlePageClick = (data) => {\r\n        //     let selected = data.selected;\r\n        //     let offset = Math.ceil(selected * this.props.perPage);\r\n\r\n        //     this.setState({ offset: offset }, () => {\r\n        //     this.loadCommentsFromServer();\r\n        //     });\r\n        // };\r\n\r\n        let history = useHistory();\r\n        \r\n    return (\r\n        <div>\r\n           <div className=\"Header container\">\r\n          <div className=\"col-md-12\">\r\n             <div class=\"row d--f  jc--c\">\r\n                <h1 className=\"text-center text-white mt-4\">Welcome To CryptoCurrency News Website</h1>\r\n             </div>\r\n             <div className =\"row\" style={{paddingLeft:'35px'}}>\r\n              \r\n                 <div className=\"cryptoList row d--f  \">\r\n\r\n                    {\r\n                 cryptoList.map((coin)=>{\r\n                   return (\r\n                      <div className=\"card col-md-4 mt-4 ml-5 mr-5\" \r\n                      style={{width:'20rem',marginLeft:'15px',marginRight:'15px'}}\r\n                      onClick={()=>{history.push(`/currency/${coin.id}`)}}>\r\n                        <div className=\"card-body\">\r\n                              <h5 class=\"card-title\">{coin.symbol}</h5>\r\n                              <h6 class=\"card-subtitle mb-2 text-muted\">{coin.price_usd}</h6>\r\n                        </div>\r\n                      </div>\r\n                     );\r\n                    })\r\n                    }\r\n\r\n                    {/* <ReactPaginate\r\n                    previousLabel={'previous'}\r\n                    nextLabel={'next'}\r\n                    breakLabel={'...'}\r\n                    breakClassName={'break-me'}\r\n                    pageCount={5}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={'pagination'}\r\n                    activeClassName={'active'}\r\n                    /> */}\r\n\r\n                 \r\n             </div>\r\n             </div>\r\n          </div>\r\n       </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport  function Currency() {\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    const [coin,setCoin] = useState(\r\n    {id:\"\",\r\n    symbol:\"\",\r\n    name:\"\",\r\n    nameid:\"\",\r\n    rank:0,\r\n    price_usd:\"\",\r\n    percent_change_24h:\"\",\r\n    percent_change_1h:\"\",\r\n    percent_change_7d:\"\",\r\n    price_btc:\"\",\r\n    market_cap_usd:\"\",\r\n    volume24:0,\r\n    volume24a:0,\r\n    csupply:\"\",\r\n    tsupply:\"\",\r\n    msupply:\"\"}\r\n    )\r\n    useEffect(() => {\r\n        axios.get(`https://api.coinlore.net/api/ticker/?id=${id}`)\r\n        .then((coin)=>{\r\n          setCoin(\r\n               {id:coin.data[0].id,\r\n                symbol:coin.data[0].symbol,\r\n                name:coin.data[0].name,\r\n                nameid:coin.data[0].nameid,\r\n                rank:coin.data[0].rank,\r\n                price_usd:coin.data[0].price_usd,\r\n                percent_change_24h:coin.data[0].percent_change_24h,\r\n                percent_change_1h:coin.data[0].percent_change_1h,\r\n                percent_change_7d:coin.data[0].percent_change_7d,\r\n                price_btc:coin.data[0].price_btc,\r\n                market_cap_usd:coin.data[0].market_cap_usd,\r\n                volume24:coin.data[0].volume24,\r\n                volume24a:coin.data[0].volume24a,\r\n                csupply:coin.data[0].csupply,\r\n                tsupply:coin.data[0].tsupply,\r\n                msupply:coin.data[0].msupply}\r\n          )\r\n        })\r\n    }, [])\r\n    // {id:\"\",\r\n    // symbol:\"\",\r\n    // name:\"\",\r\n    // nameid:\"\",\r\n    // rank:0,\r\n    // price_usd:\"\",\r\n    // percent_change_24h:\"\",\r\n    // percent_change_1h:\"\",\r\n    // percent_change_7d:\"\",\r\n    // price_btc:\"\",\r\n    // market_cap_usd:\"\",\r\n    // volume24:0,\r\n    // volume24a:0,\r\n    // csupply:\"\",\r\n    // tsupply:\"\",\r\n    // msupply:\"\"}\r\n    return (\r\n        <div>\r\n           <div className=\"Header container\">\r\n            <div className=\"text-center\">\r\n                <a className=\"text-white\" style={{cursor:'pointer'}}\r\n                onClick={()=>history.push('/')}>Home page</a>\r\n            </div> \r\n             <div class=\"row d--f  jc--c\">\r\n                <h1 className=\"text-center text-white\">Details of the CryptoCurrency : {coin.name}</h1>\r\n             </div>\r\n             <div className=\"row d--f jc--c\" style={{paddingBottom:\"50px\"}}>\r\n               <div className=\"card col-md-5 mt-4\" style={{paddingBottom:\"50px\"}}>\r\n                        <div className=\"card-body\">\r\n                              <h5 class=\"card-title\">Symbol : {coin.symbol}</h5>\r\n                              <h5 class=\"card-title\">Name : {coin.name}</h5>\r\n                              <h5 class=\"card-title\">NameID : {coin.nameid}</h5>\r\n                              <h5 class=\"card-title\">Rank : {coin.rank}</h5>\r\n                              <h5 class=\"card-title\">Price Usd : {coin.price_usd}</h5>\r\n                              <h5 class=\"card-title\">Percent Change_24h : {coin.percent_change_24h}</h5>\r\n                              <h5 class=\"card-title\">Percent Change_1h : {coin.percent_change_1h}</h5>\r\n                              <h5 class=\"card-title\">Percent Change_7d : {coin.percent_change_7d}</h5>\r\n                              <h5 class=\"card-title\">Price Btc : {coin.price_btn}</h5>\r\n                              <h5 class=\"card-title\">Market cap_usd : {coin.market_cap_usd}</h5>\r\n                              <h5 class=\"card-title\">volume24 : {coin.volume24}</h5>\r\n                              <h5 class=\"card-title\">volume24a : {coin.volume24a}</h5>\r\n                              <h5 class=\"card-title\">csupply : {coin.csupply}</h5>\r\n                              <h5 class=\"card-title\">tsupply : {coin.tsupply}</h5>\r\n                              <h5 class=\"card-title\">msupply : {coin.msupply}</h5>\r\n                        </div>\r\n                </div>\r\n             </div>\r\n           </div> \r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport './FlexBox.css';\nimport {Main} from './routes/Main.js';\nimport {Currency} from './routes/Currency.js';\n\n\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nfunction App() {\n \n  return (\n    <div className=\"App\">\n       <Router>\n         <Route path='/' exact render={(props)=> <Main />} />\n         <Route path='/currency/:id'  render={(props)=> <Currency />} />\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}