{"version":3,"sources":["utils/Pagination.js","routes/Main.js","routes/Currency.js","App.js","index.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","className","map","number","href","onClick","Main","useState","cryptoList","setCryptoList","useEffect","axios","get","then","response","data","console","log","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","history","useHistory","class","style","paddingLeft","coin","width","marginLeft","marginRight","id","name","value","price_usd","displayType","thousandSeparator","prefix","marginBottom","length","pageNumber","Currency","useParams","symbol","nameid","rank","percent_change_24h","percent_change_1h","percent_change_7d","price_btc","market_cap_usd","volume24","volume24a","csupply","tsupply","msupply","setCoin","cursor","paddingBottom","App","basename","path","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.237f672e.chunk.js","sourcesContent":["import React from 'react'\r\nexport const   Pagination =({postsPerPage,totalPosts,paginate}) => {\r\n    const pageNumbers = [];\r\n    for(let i =1; i< Math.ceil(totalPosts / postsPerPage); i++){\r\n        pageNumbers.push(i);\r\n    }\r\n    return (\r\n            <nav aria-label=\"Page navigation\">\r\n              <ul className=\"pagination justify-content-center\">        \r\n                {\r\n                pageNumbers.map((number)=>(\r\n\r\n                    <li className=\"page-item\"   key={number}>\r\n                        <a className=\"page-link\" href=\"#\"  \r\n                        onClick={()=>{paginate(number)}}>{number}</a>\r\n                    </li>\r\n                ))\r\n                }\r\n              </ul>\r\n            </nav> \r\n    )\r\n}\r\n","import React , {useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Pagination} from '../utils/Pagination.js';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport  function Main() {\r\n       \r\n       const [cryptoList,setCryptoList] = useState([]) // DECLARING THE STATE WHERE WE STORE THE DATA\r\n      \r\n        useEffect(()=>{\r\n        // GETTING THE DATA\r\n        axios.get('https://api.coinlore.net/api/tickers/')\r\n        .then((response)=>{\r\n            setCryptoList(response.data['data'])\r\n            console.log(response.data['data'])\r\n            \r\n        })\r\n\r\n        },[]);\r\n\r\n    \r\n        // DECLARING THE STATES NEEDED FOR THE PAGINATION\r\n        const [currentPage,setCurrentPage] = useState(1);\r\n        const [postsPerPage,setPostsPerPage] = useState(12);\r\n        const indexOfLastPost = currentPage * postsPerPage;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        const currentPosts = cryptoList.slice(indexOfFirstPost,indexOfLastPost);\r\n        const paginate = (pageNumber) =>{ \r\n            setCurrentPage(pageNumber)\r\n        \r\n        }\r\n\r\n        let history = useHistory();\r\n    return (\r\n        <div>\r\n           <div className=\"Header container\">\r\n          <div className=\"col-md-12\">\r\n             <div class=\"row d--f  jc--c\">\r\n                <h1 className=\"text-center text-white mt-4\">Welcome To CryptoCurrency News Website</h1>\r\n             </div>\r\n             <div className =\"row\" style={{paddingLeft:'35px'}}>\r\n              \r\n                 <div className=\"cryptoList row d--f  \">\r\n\r\n                    {\r\n                   // DISPLAYING THE LIST OF THE COINS \r\n                 currentPosts.map((coin)=>{\r\n                   return (\r\n                      <div className=\"card col-md-4 mt-4 ml-5 mr-5\" \r\n                      style={{width:'20rem',marginLeft:'15px',marginRight:'15px'}}\r\n                      onClick={()=>{history.push(`/currency/${coin.id}`)}}>\r\n                        <div className=\"card-body\">\r\n                              <h5 class=\"card-title\">{coin.name}</h5>\r\n                              <h6 class=\"card-subtitle mb-2 text-muted\">\r\n                              <NumberFormat value={coin.price_usd} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                              </h6>\r\n                        </div>\r\n                      </div>\r\n                     );\r\n                    })\r\n                    }\r\n                    <div className='mt-4' style={{marginBottom:'25px'}}></div>\r\n                    <Pagination postsPerPage ={postsPerPage} totalPosts = {cryptoList.length} \r\n                    paginate ={paginate} />\r\n             </div>\r\n             </div>\r\n          </div>\r\n       </div>  \r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport  function Currency() {\r\n    let {id} = useParams(); // THE ID WE NEED TO SHOW THE DETAILS OF A COIN\r\n    let history = useHistory();  \r\n    const [coin,setCoin] = useState(  \r\n     // DECLARING THE OBJECT WHERE WE STORE THE DATA OF A SELECTED COIN\r\n    {id:\"\",\r\n    symbol:\"\",\r\n    name:\"\",\r\n    nameid:\"\",\r\n    rank:0,\r\n    price_usd:\"\",\r\n    percent_change_24h:\"\",\r\n    percent_change_1h:\"\",\r\n    percent_change_7d:\"\",\r\n    price_btc:\"\",\r\n    market_cap_usd:\"\",\r\n    volume24:0,\r\n    volume24a:0,\r\n    csupply:\"\",\r\n    tsupply:\"\",\r\n    msupply:\"\"}\r\n    )\r\n    useEffect(() => {\r\n        // GETTING THE DATA AND STORE IN THE OBJECT \r\n        axios.get(`https://api.coinlore.net/api/ticker/?id=${id}`)\r\n        .then((coin)=>{\r\n          setCoin(\r\n               {id:coin.data[0].id,\r\n                symbol:coin.data[0].symbol,\r\n                name:coin.data[0].name,\r\n                nameid:coin.data[0].nameid,\r\n                rank:coin.data[0].rank,\r\n                price_usd:coin.data[0].price_usd,\r\n                percent_change_24h:coin.data[0].percent_change_24h,\r\n                percent_change_1h:coin.data[0].percent_change_1h,\r\n                percent_change_7d:coin.data[0].percent_change_7d,\r\n                price_btc:coin.data[0].price_btc,\r\n                market_cap_usd:coin.data[0].market_cap_usd,\r\n                volume24:coin.data[0].volume24,\r\n                volume24a:coin.data[0].volume24a,\r\n                csupply:coin.data[0].csupply,\r\n                tsupply:coin.data[0].tsupply,\r\n                msupply:coin.data[0].msupply}\r\n          )\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n           <div className=\"Header container\">\r\n            <div className=\"text-center\">\r\n                <a className=\"text-white\" style={{cursor:'pointer'}}\r\n                onClick={()=>history.push('/')}>Home page</a>\r\n            </div> \r\n             <div class=\"row d--f  jc--c\">\r\n                <h1 className=\"text-center text-white\">Details of the CryptoCurrency : {coin.name}</h1>\r\n             </div>\r\n             <div className=\"row d--f jc--c\" style={{paddingBottom:\"50px\"}}>\r\n               <div className=\"card col-md-5 mt-4\" style={{paddingBottom:\"50px\"}}>\r\n                        <div className=\"card-body\">\r\n                              {/* DISPLAYING THE DATA OF THE COIN */}\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Symbol : </b>\r\n                                  <span className=\"text-muted\">{coin.symbol}</span>\r\n                               </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Name : </b>\r\n                                  <span className=\"text-muted\">{coin.name}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>NameID : </b>\r\n                                  <span className=\"text-muted\">{coin.nameid}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Rank : </b>\r\n                                  <span className=\"text-muted\">{coin.rank}</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Price Usd : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.price_usd} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_24h : </b>\r\n                                   <span className=\"text-muted\">{coin.percent_change_24h} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_1h : </b>\r\n                                  <span className=\"text-muted\">{coin.percent_change_1h} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                  <b>Percent Change_7d : </b> \r\n                                  <span className=\"text-muted\">{coin.percent_change_7d} %</span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Price Btc : </b> \r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.price_btc} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Market Cap Usd : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.market_cap_usd} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                    B\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Volume24 : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.volume24} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Volume24a : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.volume24a} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Csupply : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.csupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Tsupply : </b> \r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.tsupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                              <h5 class=\"card-title\">\r\n                                <b>Msupply : </b>\r\n                                <span className=\"text-muted\">\r\n                                    <NumberFormat value={coin.msupply} displayType={'text'} thousandSeparator={true}/>\r\n                                </span>\r\n                              </h5>\r\n                        </div>\r\n                </div>\r\n             </div>\r\n           </div> \r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport './FlexBox.css';\nimport {Main} from './routes/Main.js';\nimport {Currency} from './routes/Currency.js';\n\n\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nfunction App() {\n \n  return (\n    <div className=\"App\">\n       <Router basename={'/react-cryptocurrency-news/'}>\n         <Route path='/' exact render={(props)=> <Main />} />\n         <Route path='/currency/:id'  render={(props)=> <Currency />} />\n       </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}